{"version":3,"sources":["components/Rating.js","components/Label.js","components/PhotoItemSmall.js","App.js","index.js"],"names":["Rating","state","value","ratingItems","event","preventDefault","this","setState","map","className","onClick","handleValueChange","bind","React","Component","Label","defaultColor","colors","selectedColors","red","green","yellow","color","stopPropagation","Object","assign","colorItems","style","backgroundColor","toggleColor","PhotoItemSmall","item","props","data","onPreviewClick_overlaySwitcher","src","image","alt","title","App","class","previewData","photosList","photos","id","Fragment","onClose","closePreview","Preview","bigImage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAEMA,E,4MACFC,MAAQ,CACJC,MAAO,EACPC,YAAa,CAAC,EAAG,EAAG,EAAG,EAAG,I,gEAGZD,EAAOE,GACrBA,EAAMC,iBACNC,KAAKC,SAAS,CAACL,MAAOA,M,+BAGhB,IAAD,OACCC,EAAcG,KAAKL,MAAME,YAAYK,KAAI,SAAAN,GAAK,OAChD,sBACIO,UAAW,EAAKR,MAAMC,OAASA,EAAQ,SAAW,GAClDQ,QAAS,EAAKC,kBAAkBC,KAAK,EAAMV,QAInD,OACI,qBAAKO,UAAU,SAAf,SACMN,Q,GArBGU,IAAMC,WCArBC,E,4MACFd,MAAQ,CACJe,aAAc,UACdC,OAAQ,CAAC,MAAO,QAAS,UACzBC,eAAgB,CACZC,KAAK,EACLC,OAAO,EACPC,QAAQ,I,0DAIJC,EAAOlB,GACfA,EAAMmB,kBACN,IAAML,EAAiBM,OAAOC,OAAO,GAAInB,KAAKL,MAAMiB,gBACpDA,EAAeI,IAAUJ,EAAeI,GAExChB,KAAKC,SAAS,CACVW,eAAgBA,M,+BAId,IAAD,OACCQ,EAAapB,KAAKL,MAAMgB,OAAOT,KAAI,SAAAc,GAAK,OAC1C,sBACIK,MACI,CAAEC,gBAAiB,EAAK3B,MAAMiB,eAAeI,GAASA,EAAQ,EAAKrB,MAAMe,cAE7EN,QAAS,EAAKmB,YAAYjB,KAAK,EAAMU,QAI7C,OACI,qBAAKb,UAAU,SAAf,SACMiB,Q,GAjCEb,IAAMC,WCGpBgB,E,uKAGE,IAAIC,EAAOzB,KAAK0B,MAAMC,KACtB,OACI,sBAAKxB,UAAU,iBAAf,UACI,yBAAQA,UAAU,kBAAkBC,QAASJ,KAAK0B,MAAME,+BAAxD,UACI,qBAAKC,IAAKJ,EAAKK,MAAOC,IAAI,KAC1B,qCAAaN,EAAKO,WAEtB,sBAAK7B,UAAU,uBAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,c,GAZSI,IAAMC,WCE7ByB,E,4MACFtC,MAAQ,CACJuC,MAAO,GACPC,YAAa,M,EAGjBP,+BAAiC,SAACD,GAC9B,EAAK1B,SAAS,CACVkC,YAAaR,EACbO,MAAO,a,6DAKXlC,KAAKC,SAAS,CAACkC,YAAa,S,+BAGtB,IAAD,OACDC,EAAaC,EAAOnC,KAAI,SAAAuB,GAAI,OAC5B,cAAC,EAAD,CAAgBE,KAAMF,EAENG,+BAAgC,EAAKA,+BAA+BtB,KAAK,EAAMmB,IAD1EA,EAAKa,OAG9B,OACI,eAAC,IAAMC,SAAP,WACKvC,KAAKL,MAAMwC,aAAe,cAAC,EAAD,CACvBR,KAAM3B,KAAKL,MAAMwC,YACjBK,QAASxC,KAAKyC,aAAanC,KAAKN,QACpC,qBAAKG,UAAU,UAAf,SACKiC,W,GA7BH5B,aAyCZkC,EAAU,SAAChB,GACb,IAAID,EAAOC,EAAMC,KACjB,OAAO,qBAAKxB,UAAU,UAAf,SACH,iCACI,qBAAK0B,IAAKJ,EAAKkB,SAAUZ,IAAI,GAAG3B,QAASsB,EAAMc,eAM5CP,ICpDfW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.c1c789f3.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass Rating extends React.Component {\r\n    state = {\r\n        value: 0,\r\n        ratingItems: [1, 2, 3, 4, 5]\r\n    };\r\n\r\n    handleValueChange(value, event) {\r\n        event.preventDefault();\r\n        this.setState({value: value})\r\n    }\r\n\r\n    render() {\r\n        const ratingItems = this.state.ratingItems.map(value =>\r\n            <span\r\n                className={this.state.value >= value ? 'active' : ''}\r\n                onClick={this.handleValueChange.bind(this, value)}\r\n            ></span>\r\n        );\r\n\r\n        return (\r\n            <div className=\"rating\">\r\n                { ratingItems }\r\n            </div>)\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nexport { Rating }","import React from \"react\";\r\n\r\nclass Label extends React.Component {\r\n    state = {\r\n        defaultColor: '#767273',\r\n        colors: ['red', 'green', 'yellow'],\r\n        selectedColors: {\r\n            red: false,\r\n            green: false,\r\n            yellow: false\r\n        }\r\n    };\r\n\r\n    toggleColor(color, event) {\r\n        event.stopPropagation();\r\n        const selectedColors = Object.assign({}, this.state.selectedColors); // create a new copy of selected colors\r\n        selectedColors[color] = !selectedColors[color]; // toggle\r\n\r\n        this.setState({\r\n            selectedColors: selectedColors\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const colorItems = this.state.colors.map(color =>\r\n            <span\r\n                style={\r\n                    { backgroundColor: this.state.selectedColors[color] ? color : this.state.defaultColor }\r\n                }\r\n                onClick={this.toggleColor.bind(this, color)}\r\n            ></span>\r\n        );\r\n\r\n        return (\r\n            <div className=\"labels\">\r\n                { colorItems }\r\n            </div>)\r\n    }\r\n};\r\n\r\nexport { Label }","import React from \"react\";\r\nimport {Rating} from './Rating'\r\nimport {Label} from './Label'\r\n\r\n// <img src={require('./images/shirt1_sm.jpg')} alt=\"\"/>\r\nclass PhotoItemSmall extends React.Component {\r\n\r\n    render() {\r\n        let item = this.props.data;\r\n        return(\r\n            <div className=\"wrapper_common\">\r\n                <figure className=\"wrapper_picture\" onClick={this.props.onPreviewClick_overlaySwitcher}>\r\n                    <img src={item.image} alt=\"\"/>\r\n                    <figcaption>{item.title}</figcaption>\r\n                </figure>\r\n                <div className=\"wrapper_rating_label\">\r\n                    <Label/>\r\n                    <Rating/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport { PhotoItemSmall }","import React, { Component } from 'react';\nimport './App.css';\nimport photos from './photosData/photos'\nimport { PhotoItemSmall } from './components/PhotoItemSmall';\n\n\n\nclass App extends Component {\n    state = {\n        class: '',\n        previewData: null,\n    };\n\n    onPreviewClick_overlaySwitcher = (data) => {\n        this.setState({\n            previewData: data,\n            class: 'overlay',\n        })\n    };\n\n    closePreview() {\n        this.setState({previewData: null});\n    }\n\n    render() {\n        let photosList = photos.map(item =>\n            <PhotoItemSmall data={item}\n                            key={item.id}\n                            onPreviewClick_overlaySwitcher={this.onPreviewClick_overlaySwitcher.bind(this, item)}/>);\n\n        return (\n            <React.Fragment>\n                {this.state.previewData && <Preview\n                    data={this.state.previewData}\n                    onClose={this.closePreview.bind(this)}/>}\n                <div className=\"wrapper\">\n                    {photosList}\n                    {/*{this.state.previewData && <Preview\n                        data={this.state.previewData}\n                        onClose={this.closePreview.bind(this)}/>}*/}\n                </div>\n            </React.Fragment>\n        );\n    }\n\n}\n\n\nconst Preview = (props) => {\n    let item = props.data;\n    return <div className=\"overlay\">\n        <figure>\n            <img src={item.bigImage} alt=\"\" onClick={props.onClose}/>\n        </figure>\n    </div>;\n};\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}